{"version":3,"sources":["shared/form/Form.styled.js","shared/form/TextField.styled.js","pages/setNewPwd/SetNewPwd.style.js","pages/setNewPwd/SetNewPwd.js"],"names":["styled","form","props","customStyles","FormTitle","h2","formHelperTextAnim","keyframes","TextField","Container","div","FormInnerContainer","SendBtn","Button","SetNewPwd","params","match","useState","canSubmit","setCanSubmit","token","setToken","password","isErrored","errorMsg","value","fields","setFields","isLoading","setIsLoading","isTokenOk","setIsTokenOk","pwdUpdated","setPwdUpdated","useEffect","tmpToken","decodeURIComponent","a","axios","post","encToken","data","ok","document","title","handleFieldChange","e","target","name","valdInput","errMsg","oldFields","fieldName","fieldValue","moreThan8Chars","length","passwordsMustMatch","isOk","field","Loader","onSubmit","preventDefault","newPwd","style","paddingBottom","marginBottom","padding","fullWidth","label","type","onChange","error","helperText","defaultValue","color","variant","disableElevation","disabled","to","PwdUpdated"],"mappings":"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","file":"static/js/18.998fb472.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport default styled.form`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\twidth: 100%;\r\n\tflex-direction: column;\r\n\t${(props) => props.customStyles}\r\n`;\r\n\r\nexport const FormTitle = styled.h2`\r\n\ttext-transform: uppercase;\r\n\tcolor: var(--lmed-green-02);\r\n\tfont-family: 'NunitoExtraBold' !important;\r\n\tfont-size: 30px;\r\n\ttext-align: center;\r\n`;\r\n","import styled, { keyframes } from 'styled-components';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst formHelperTextAnim = keyframes`\r\n\t0% {\r\n\t\topacity: 0;\r\n\t\ttransform: scaleY(0);\r\n\t}\r\n\t80%{\r\n\t\ttransform: scaleY(1);\r\n\t}\r\n\t100% {\r\n\t\topacity: 1;\r\n\t}\r\n`;\r\n\r\nexport default styled(TextField)`\r\n\tmargin-top: 2px !important;\r\n\r\n\t& .MuiInputLabel-formControl {\r\n\t\tcolor: var(--lmed-green-00);\r\n\t\tfont-family: NunitoBold;\r\n\t}\r\n\r\n\t& .MuiInputBase-input {\r\n\t\tcolor: var(--lmed-black-00);\r\n\t\tpadding: 6px 0 5px;\r\n\t}\r\n\r\n\t& .MuiInputLabel-shrink {\r\n\t\ttransform: translate(0, 6.5px) scale(0.75);\r\n\t}\r\n\r\n\t& .MuiFormLabel-root.Mui-error {\r\n\t\tcolor: #ff1100;\r\n\t}\r\n\r\n\t& .MuiInput-underline:before,\r\n\t& .MuiInput-underline:after {\r\n\t\tborder-bottom: 1px solid var(--lmed-green-00);\r\n\t}\r\n\r\n\t& .MuiInput-underline:hover:not(.Mui-disabled):before {\r\n\t\tborder-bottom: 2px solid var(--lmed-green-00);\r\n\t}\r\n\r\n\t& .MuiFormHelperText-root {\r\n\t\tanimation: ${formHelperTextAnim} 220ms;\r\n\t}\r\n`;\r\n","import styled from 'styled-components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nexport const Container = styled.div`\r\n\tdisplay: grid;\r\n\tplace-items: center;\r\n\twidth: 100%;\r\n`;\r\n\r\nexport const FormInnerContainer = styled.div`\r\n\tdisplay: grid;\r\n\tplace-items: center;\r\n\toverflow-y: auto;\r\n\twidth: 80%;\r\n\tpadding: 0 20px;\r\n\r\n\t& > p {\r\n\t\tcolor: var(--lmed-green-03);\r\n\t}\r\n`;\r\n\r\nexport const SendBtn = styled(Button)`\r\n\tborder-radius: 25px !important;\r\n\tmargin-top: 50px !important;\r\n\twidth: 70%;\r\n\t& * {\r\n\t\tcolor: white;\r\n\t}\r\n`;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Container, SendBtn, FormInnerContainer } from './SetNewPwd.style';\r\nimport Form, { FormTitle } from 'shared/form/Form.styled';\r\nimport TextField from 'shared/form/TextField.styled';\r\nimport axios from 'axios';\r\nimport Loader from 'components/loader/Loader';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default function SetNewPwd({ match: { params } }) {\r\n\tconst [canSubmit, setCanSubmit] = useState(false);\r\n\tconst [token, setToken] = useState('');\r\n\tconst [fields, setFields] = useState({\r\n\t\tpassword: {\r\n\t\t\tisErrored: null,\r\n\t\t\terrorMsg: null,\r\n\t\t\tvalue: ''\r\n\t\t},\r\n\t\t'confirm-password': {\r\n\t\t\tisErrored: null,\r\n\t\t\terrorMsg: null,\r\n\t\t\tvalue: ''\r\n\t\t}\r\n\t});\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst [isTokenOk, setIsTokenOk] = useState(false);\r\n\tconst [pwdUpdated, setPwdUpdated] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst tmpToken = decodeURIComponent(params.token);\r\n\t\tsetToken(tmpToken);\r\n\t\t(async () => {\r\n\t\t\tconst { data } = await axios.post('/user/recover-pwd/set-new-pwd', {\r\n\t\t\t\tencToken: tmpToken\r\n\t\t\t});\r\n\t\t\tsetIsTokenOk(data.ok);\r\n\t\t\tsetIsLoading(false);\r\n\t\t})();\r\n\t}, [params]);\r\n\r\n\tuseEffect(() => {\r\n\t\tdocument.title = 'Nueva Contraseña';\r\n\t}, []);\r\n\r\n\tconst handleFieldChange = async (e) => {\r\n\t\tconst { name, value } = e.target;\r\n\t\tconst { isErrored, errMsg } = await valdInput(name, value);\r\n\t\tsetFields((oldFields) => ({\r\n\t\t\t...oldFields,\r\n\t\t\t[name]: {\r\n\t\t\t\tisErrored,\r\n\t\t\t\terrMsg,\r\n\t\t\t\tvalue\r\n\t\t\t}\r\n\t\t}));\r\n\t};\r\n\r\n\tconst valdInput = async (fieldName = '', fieldValue = '') => {\r\n\t\tswitch (fieldName) {\r\n\t\t\tcase 'password':\r\n\t\t\t\tlet moreThan8Chars = fieldValue.length < 6;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tisErrored: moreThan8Chars,\r\n\t\t\t\t\terrMsg: moreThan8Chars\r\n\t\t\t\t\t\t? 'Las contraseñas deben tener 6 o más dígitos.'\r\n\t\t\t\t\t\t: null\r\n\t\t\t\t};\r\n\t\t\tcase 'confirm-password':\r\n\t\t\t\tlet passwordsMustMatch = fields['password'].value !== fieldValue;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tisErrored: passwordsMustMatch,\r\n\t\t\t\t\terrMsg: passwordsMustMatch ? 'Las contraseñas no coinciden.' : null\r\n\t\t\t\t};\r\n\t\t\tdefault:\r\n\t\t\t\treturn {\r\n\t\t\t\t\tisErrored: false,\r\n\t\t\t\t\terrMsg: null\r\n\t\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tlet isOk = true;\r\n\t\tfor (let field in fields) {\r\n\t\t\tif (fields[field].isErrored === null || fields[field].isErrored) {\r\n\t\t\t\tisOk = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetCanSubmit(isOk);\r\n\t}, [fields]);\r\n\r\n\tconst handleFormSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (canSubmit) {\r\n\t\t\t(async () => {\r\n\t\t\t\tconst { data } = await axios.post('/user/recover-pwd/set-new-pwd', {\r\n\t\t\t\t\tencToken: token,\r\n\t\t\t\t\tnewPwd: fields['password'].value\r\n\t\t\t\t});\r\n\t\t\t\tsetPwdUpdated(data.pwdUpdated);\r\n\t\t\t})();\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t{!isLoading ? (\r\n\t\t\t\t!isTokenOk ? (\r\n\t\t\t\t\t<Redirect to=\"/\" />\r\n\t\t\t\t) : !pwdUpdated ? (\r\n\t\t\t\t\t<Form onSubmit={handleFormSubmit} style={{ paddingBottom: '60px' }}>\r\n\t\t\t\t\t\t<FormTitle style={{ marginBottom: 35, padding: '0 20px' }}>\r\n\t\t\t\t\t\t\tNueva Contraseña\r\n\t\t\t\t\t\t</FormTitle>\r\n\t\t\t\t\t\t<FormInnerContainer>\r\n\t\t\t\t\t\t\t<p>Especifica una nueva contraseña para tu cuenta</p>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\tlabel=\"Nueva Contraseña\"\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tonChange={handleFieldChange}\r\n\t\t\t\t\t\t\t\terror={fields['password'].isErrored}\r\n\t\t\t\t\t\t\t\thelperText={fields['password'].errMsg}\r\n\t\t\t\t\t\t\t\tdefaultValue={fields['password'].value}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\tname=\"confirm-password\"\r\n\t\t\t\t\t\t\t\tlabel=\"Confirma Contraseña\"\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tonChange={handleFieldChange}\r\n\t\t\t\t\t\t\t\terror={fields['confirm-password'].isErrored}\r\n\t\t\t\t\t\t\t\thelperText={fields['confirm-password'].errMsg}\r\n\t\t\t\t\t\t\t\tdefaultValue={fields['confirm-password'].value}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<SendBtn\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tdisableElevation\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tdisabled={!canSubmit}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tEnviar\r\n\t\t\t\t\t\t\t</SendBtn>\r\n\t\t\t\t\t\t</FormInnerContainer>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<PwdUpdated />\r\n\t\t\t\t)\r\n\t\t\t) : (\r\n\t\t\t\t<Loader />\r\n\t\t\t)}\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nconst PwdUpdated = () => {\r\n\treturn <div>Contraseña actualizada</div>;\r\n};\r\n"],"sourceRoot":""}